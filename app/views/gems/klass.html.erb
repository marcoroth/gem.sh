<% title @klass.title %>

<div class="grid grid-cols-1 md:grid-cols-4 gap-12">
  <div class="col-span-1 md:col-span-3">
    <%= render partial: "breadcrumb" %>

    <div class="mt-6 mb-6">
      <%= render Layout::Heading.new(title: @klass) %>
    </div>

    <% if (rbs = @klass.rbs_signature(@gem)) %>
      <%= render RBSSignature.new(rbs: rbs) %>
    <% end %>

    <div>
      <% comment = @klass.comments.join("<br>").force_encoding("UTF-8") %>

      <% h = RDoc::Markup::ToHtml.new(RDoc::Options.new) %>
      <%== h.convert(comment) %>
    </div>

    <div class="grid">
      <% @klass.class_methods.sort_by(&:name).each do |class_method| %>
        <%= render MethodDetails.new(object: class_method, parent: @namespace, gem: @gem) %>
      <% end %>

      <% @klass.instance_methods.sort_by(&:name).each do |instance_method| %>
        <%= render MethodDetails.new(object: instance_method, parent: @namespace, gem: @gem) %>
      <% end %>
    </div>
  </div>

  <div class="col-span-1">
    <%= render Layout::CodeList.new(items: @namespace, gem: @gem, title: "Namespace") if @namespace %>
    <%= render Layout::CodeList.new(items: @classes, gem: @gem, title: "Classes in this namespace") if @classes.any? %>
    <%= render Layout::CodeList.new(items: @klass.superclass, gem: @gem, title: "Parent class") if @klass.superclass %>
    <%= render Layout::CodeList.new(items: @klass.included_modules, title: "Included Modules", gem: @gem) if @klass.included_modules.any? %>
    <%= render Layout::CodeList.new(items: @klass.extended_modules, title: "Extended Modules", gem: @gem) if @klass.extended_modules.any? %>
    <%= render Layout::CodeList.new(items: @klass.class_methods, gem: @gem, title: "Class Methods") if @klass.class_methods.any? %>
    <%= render Layout::CodeList.new(items: @klass.instance_methods, gem: @gem, title: "Instance Methods") if @klass.instance_methods.any? %>
    <%= render Layout::CodeList.new(items: @klass.defined_files, gem: @gem, title: "Defined in") if @klass.defined_files.any? %>
  </div>
</div>
