<% title @module.title %>

<%= render Gems::Wrapper.new(gem: @gem, modules: @gem.top_level_modules, classes: @gem.classes, class_methods: @gem.class_methods, instance_methods: @gem.instance_methods) do |wrapper| %>
  <div class="col-span-1 md:col-span-3">
    <%= render UI::Heading.new(title: @module) %>

    <% if (rbs = @module.rbs_signature(@gem)) %>
      <%= render RBSSignature.new(rbs: rbs) %>
    <% end %>

    <% @module.class_methods.sort_by(&:name).each do |class_method| %>
      <%= render MethodDetails.new(object: class_method, parent: @module, gem: @gem) %>
    <% end %>

    <% @module.instance_methods.sort_by(&:name).each do |instance_method| %>
      <%= render MethodDetails.new(object: instance_method, parent: @module, gem: @gem) %>
    <% end %>

    <% if @module.class_methods.none? && @module.instance_methods.none? %>
      <% if @modules.any? %>
        <div class="mt-12">
          <%= render UI::Subheading.new(title: "Modules in this namespace") %>

          <div class="mt-6 grid grid-cols-2 md:grid-cols-3 xl:grid-cols-4 gap-4">
            <% @modules.each do |mod| %>
              <%= link_to mod.url(@gem) do %>
                <%= render UI::Card.new(title: mod.name, description: "in #{mod.qualified_namespace}") do |card|%>
                  <% card.with_badge(label: "module") %>
                <% end %>
              <% end %>
            <% end %>
          </div>
        </div>
      <% end %>

      <% if @classes.any? %>
        <div class="mt-12">
          <%= render UI::Subheading.new(title: "Classes in this namespace") %>

          <div class="mt-6 grid grid-cols-2 md:grid-cols-3 xl:grid-cols-4 gap-4">
            <% @classes.each do |klass| %>
              <%= link_to klass.url(@gem) do %>
                <%= render UI::Card.new(title: klass.name, description: "in #{klass.qualified_namespace}") do |card|%>
                  <% card.with_badge(label: "class") %>
                <% end %>
              <% end %>
            <% end %>
          </div>
        </div>
      <% end %>
    <% end %>
  </div>

  <% wrapper.with_sidebar do %>
    <%= render UI::CodeList.new(items: @modules, gem: @gem, title: "Modules") if @modules.any? %>
    <%= render UI::CodeList.new(items: @classes, gem: @gem, title: "Classes") if @classes.any? %>
    <%= render UI::CodeList.new(items: @module.included_modules, title: "Included Modules", gem: @gem) if Array.wrap(@module.included_modules).any? %>
    <%= render UI::CodeList.new(items: @module.extended_modules, title: "Extended Modules", gem: @gem) if Array.wrap(@module.extended_modules).any? %>
    <%= render UI::CodeList.new(items: @module.class_methods, gem: @gem, title: "Class Methods") if Array.wrap(@module.class_methods).any? %>
    <%= render UI::CodeList.new(items: @module.instance_methods, gem: @gem, title: "Instance Methods") if Array.wrap(@module.instance_methods).any? %>
    <%= render UI::CodeList.new(items: @module.defined_files, gem: @gem, title: "Defined in") if @module.defined_files.any? %>
  <% end %>

<% end %>
